#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from __future__ import annotations

import argparse
from pathlib import Path

from ParProcCo.msmapper_aggregator import MSMAggregator


def create_parser():
    '''
     $ msm_agg_jobscript --output output_dir --sliced-files input files ...
     '''
    parser = argparse.ArgumentParser(description='Miller Space Mapper run script for use with ParProcCo')
    parser.add_argument('--output', help='int: number of cluster jobs to split processing into', required=True)
    parser.add_argument("--sliced-files", help="str: paths to sliced results files", type=str, nargs="+")

    return parser


def run_aggregator(args: argparse.Namespace) -> None:
    '''
    Run MSMAggregator
    '''
    args.output = Path(args.output)
    sliced_file_paths = [Path(x) for x in args.sliced_files]

    MSMAggregator().aggregate(args.output, sliced_file_paths)


if __name__ == '__main__':
    args, other_args = create_parser().parse_known_args()
    run_aggregator(args)
