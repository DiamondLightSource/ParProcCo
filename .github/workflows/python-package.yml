# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
  pull_request:
    types: [ review_requested, synchronize ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 parameterized pytest
        if [ -f dev_requirements.txt ]; then pip install -r dev_requirements.txt; else pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -vvv tests/
    - name: Build sdist and wheel
      run: pipx run build
    - name: Upload sdist and wheel as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  pypi:
    # upload to PyPI and make a release on every tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [build]

    runs-on: ubuntu-latest
    permissions:
      # this permission is mandatory for trusted publishing To PyPI
      id-token: write
      # This permission allows the CI to create the release environment
      contents: write
    # Specify the GitHub Environment to publish to
    environment: release

    steps:
      # download sdist and wheel from dist job
      - uses: actions/download-artifact@v4
      # publish to PyPI using trusted publishing
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
